{% set nodeid = '0' -%}
<?xml version="1.0"?>
<!-- {{ ansible_managed }} -->
<cluster config_version="1" name="{{ cluster_name }}">
        <fence_daemon post_join_delay="30"/>
        <clusternodes>
{% for item in play_hosts %}
{% set nodeid = nodeid | int + 1 %}
{% set short_name = hostvars[item]['ansible_fqdn'].split('.') %}
                <clusternode name="{{ short_name[0] }}" nodeid="{{ nodeid }}">
{% if cluster_configure_fence_xvm == true %}
                        <fence>
				<method name="1">
					<device domain="{{ hostvars[item]['hypervisor_hostname'] }}" name="virtfence"/>
				</method>
                        </fence>
{% endif %}
                </clusternode>
{% endfor %}
        </clusternodes>
{% if cluster_configure_fence_xvm == true %}
	<fencedevices>
		<fencedevice agent="fence_xvm" name="virtfence" key_file="/etc/cluster/fence_xvm.key" multicast_address="225.0.0.12"/>
        </fencedevices>
{% else %}
	<fencedevices/>
{% endif %}
        <rm/>
{% if play_hosts|count() > 2 %}
        <cman expected_votes="{{ play_hosts|count() }}" transport="udp">
{% else %}
        <cman expected_votes="1" transport="udp" two_node="1">
{% endif %}
{% if multicast_address is defined %}
	<multicast addr="{{ multicast_address }}"/>
{% endif %}
	</cman>
</cluster>
